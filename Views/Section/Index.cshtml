@model ID_Request.Models.RequestData

@{
    ViewBag.Title = "Section";
}
@*xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*@
<h2>Section Screen</h2>

<div class="container mt-4">
    <div class="row">
        <div class="col-sm-6 col-md-6 col-lg-6 offset-3 shadow rounded">
            @using (Html.BeginForm())
            {
                <div class="mt-2">
                    <h3 class="text-center">Add Request</h3>
                </div>
                <div class="mb-3">
                    <label class="form-label">Requested By</label>
                    @Html.TextBoxFor(modelItem => modelItem.RequestedBy, new { @class = "form-control form-control-sm" })
                </div>
                <div class="mb-3">
                    <label class="form-label">Section</label>
                    @Html.TextBoxFor(modelItem => modelItem.Section, new { @class = "form-control form-control-sm" })
                </div>
                <div class="mb-3">
                    <label class="form-label">Date</label>
                    @Html.TextBoxFor(modelItem => modelItem.RequestedDate, new { @class = "form-control form-control-sm", type = "date" })
                </div>
                <div class="mb-3">
                    <label class="form-label">Employee Number</label>
                    @Html.TextBoxFor(modelItem => modelItem.EmployeeId, new { @class = "form-control form-control-sm" })
                </div>
                <div class="mb-3">
                    <label class="form-label">Employee Name</label>
                    @Html.TextBoxFor(modelItem => modelItem.EmployeeName, new { @class = "form-control form-control-sm" })
                </div>
                <div class="mb-3">
                    <label class="form-label">Reason</label>
                    @Html.TextBoxFor(modelItem => modelItem.Reason, new { @class = "form-control form-control-sm" })
                </div>
                <div class="mb-3">
                    <label class="form-label">Status</label>
                    @Html.TextBoxFor(modelItem => modelItem.Status, new { @class = "form-control form-control-sm" })
                </div>
                <div class="mb-3">
                    <h4>Requests</h4>
                    <table id="RequestData" class="table table-striped table-responsive table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>Request Date</th>
                                <th>Request By</th>
                                <th>Section</th>
                                <th>Employee Name</th>
                                <th>Employee Id</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class="mb-3">
                    <button type="button" class="btn btn-sm btn-success" onclick="refreshData()">Refresh</button>
                    <button type="button" class="btn btn-sm btn-success" onclick="addItem()">Add</button>
                    <button type="button" class="btn btn-sm btn-success" onclick="clearForm()">Clear</button>
                    <button type="button" class="btn btn-sm btn-success" onclick="deleteSelected()">Delete</button>
                </div>
                <!-- Hidden field to store the selected ID -->
                @Html.HiddenFor(model => model.Id)
            }
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        // Initial data load
        refreshData();

        // Event delegation for row selection (works with dynamically added rows)
        $("#RequestData tbody").on("click", "tr", function () {
            $(this).addClass('selected').siblings().removeClass('selected');
            var id = $(this).data('id');
            loadRequestData(id);
        });
    });

    function refreshData() {
        $.ajax({
            url: '/Section/GetAllRequestData',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                populateTable(data);
            },
            error: function (error) {
                console.error('Error fetching data:', error);
                alert('Failed to load request data. Please try again.');
            }
        });
    }

    function populateTable(data) {
        var tbody = $('#RequestData tbody');
        tbody.empty();

        $.each(data, function (i, item) {
            var row = $('<tr>').data('id', item.Id);

            row.append($('<td>').text(formatDate(item.RequestedDate)));
            row.append($('<td>').text(item.RequestedBy));
            row.append($('<td>').text(item.Section));
            row.append($('<td>').text(item.EmployeeName));
            row.append($('<td>').text(item.EmployeeId));
            row.append($('<td>').text(item.Reason));
            row.append($('<td>').text(item.Status));
            row.append($('<td>').html('<button class="btn btn-sm btn-danger" onclick="deleteItem(' + item.Id + ')">Delete</button>'));

            tbody.append(row);
        });
    }

    function loadRequestData(id) {
        if (!id) return;

        $.ajax({
            url: '/Section/GetRequestDataById/' + id,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $('#Id').val(data.Id);
                $('#RequestedBy').val(data.RequestedBy);
                $('#Section').val(data.Section);
                $('#RequestedDate').val(formatDate(data.RequestedDate));
                $('#EmployeeId').val(data.EmployeeId);
                $('#EmployeeName').val(data.EmployeeName);
                $('#Reason').val(data.Reason);
                $('#Status').val(data.Status);
            },
            error: function (error) {
                console.error('Error loading request details:', error);
                alert('Failed to load request details.');
            }
        });
    }

    function addItem() {
        SaveRequestData();
    }

    function SaveRequestData() {
        var requestData = {
            Id: $('#Id').val(),  // Include ID for updates
            RequestedBy: $('#RequestedBy').val(),
            Section: $('#Section').val(),
            RequestedDate: $('#RequestedDate').val(),
            EmployeeId: $('#EmployeeId').val(),
            EmployeeName: $('#EmployeeName').val(),
            Reason: $('#Reason').val(),
            Status: $('#Status').val()
        };

        $.ajax({
            url: '/Section/SaveRequestData',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(requestData),
            success: function (result) {
                alert('Request saved successfully!');
                clearForm();
                refreshData();
            },
            error: function (error) {
                alert('Error saving request: ' + error.responseText);
            }
        });
    }

    function deleteSelected() {
        var selectedRow = $('#RequestData tbody tr.selected');
        if (selectedRow.length === 0) {
            alert('Please select a row to delete');
            return;
        }

        var id = selectedRow.data('id');
        deleteItem(id);
    }

    function deleteItem(id) {
        if (!id) {
            alert('Invalid request ID');
            return;
        }

        if (confirm('Are you sure you want to delete this request?')) {
            $.ajax({
                url: '/Section/DeleteRequest/' + id,
                type: 'POST',
                success: function (result) {
                    alert('Request deleted successfully!');
                    clearForm();
                    refreshData();
                },
                error: function (error) {
                    alert('Error deleting request: ' + error.responseText);
                }
            });
        }
    }

    function clearForm() {
        // Reset the form fields
        $('#Id').val('');
        $('#RequestedBy').val('');
        $('#Section').val('');
        $('#RequestedDate').val('');
        $('#EmployeeId').val('');
        $('#EmployeeName').val('');
        $('#Reason').val('');
        $('#Status').val('');

        // Remove row selection
        $('#RequestData tbody tr').removeClass('selected');
    }

    function formatDate(dateString) {
        if (!dateString) return '';

        // Handle "/Date(milliseconds)/" format that sometimes comes from ASP.NET
        if (dateString.indexOf('/Date(') > -1) {
            var milliseconds = parseInt(dateString.replace(/\/Date\((\d+)\)\//, '$1'));
            var date = new Date(milliseconds);
            return date.toISOString().split('T')[0]; // Format as YYYY-MM-DD
        }

        // Handle regular date string
        var date = new Date(dateString);
        return date.toISOString().split('T')[0]; // Format as YYYY-MM-DD
    }
</script>